#!/usr/bin/env bash
# Manages the script 'manage_my_process':
# - When passed 'start':
#   1. Starts 'manage_my_process'.
#   2. Creates a file containing its PID in /var/run/my_process.pid.
#   3. Displays "manage_my_process started."
# - When passed 'stop':
#   1. Stops 'manage_my_process'.
#   2. Deletes the file /var/run/my_process.pid.
#   3. Displays "manage_my_process stopped."
# - When passed 'restart':
#   1. Stops 'manage_my_process'.
#   2. Deletes the file /var/run/my_process.pid.
#   3. Starts 'manage_my_process'.
#   4. Creates a file containing its PID in /var/run/my_process.pid.
#   5. Displays "manage_my_process restarted."
# - If any other or no arguments are passed, displays 
# "Usage: manage_my_process {start|stop|restart}".

if [ "${1}" == "start" ]
then
    # Start 'manage_my_process' in the background.
    ./manage_my_process &
    # Create a file containing its PID in /var/run/my_process.pid.
    touch /var/run/my_process.pid
    echo "$!" > /var/run/my_process.pid
    echo "manage_my_process started"
elif [ "${1}" == "stop" ]
then
    echo "manage_my_process stopped"
    # Terminate 'manage_my_process' using the PID from /var/run/my_process.pid.
    kill "$(cat /var/run/my_process.pid)"
    # Delete the PID file.
    rm /var/run/my_process.pid
elif [ "${1}" == "restart" ]
then
    # Stop 'manage_my_process'.
    kill "$(cat /var/run/my_process.pid)"
    # Delete the PID file.
    rm /var/run/my_process.pid
    # Start 'manage_my_process' again.
    ./manage_my_process &
    # Create a new PID file.
    touch /var/run/my_process.pid
    echo "$!" > /var/run/my_process.pid
    echo "manage_my_process restarted"
else
    # Display usage instructions if an invalid argument is provided.
    echo "Usage: manage_my_process {start|stop|restart}"
fi
